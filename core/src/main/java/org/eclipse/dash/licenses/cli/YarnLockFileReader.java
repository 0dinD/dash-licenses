/*************************************************************************
 * Copyright (c) 2021 The Eclipse Foundation and others.
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution, and is available at https://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 *************************************************************************/
package org.eclipse.dash.licenses.cli;

import java.io.BufferedReader;
import java.io.Reader;
import java.util.Collection;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

import org.eclipse.dash.licenses.ContentId;
import org.eclipse.dash.licenses.IContentId;

/**
 * This is a very rudimentary <code>yarn.lock</code> file reader. Rather than
 * try to actually read the file (which is not in any standard format), this
 * implementation counts on a simple trick. It reads the file line-by-line,
 * looking for <code>resolved</code> entries. These entries describe the very
 * specific version of the dependency, expressed as a URL, that was resolved
 * when the file was created.
 * 
 * <p>
 * For example:
 * 
 * <pre>
 * # THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
 * # yarn lockfile v1
 * 
 * "@babel/code-frame@^7.0.0", "@babel/code-frame@^7.10.4":
 *   version "7.10.4"
 *   resolved "https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.10.4.tgz#168da1a36e90da68ae8d49c0f1b48c7c6249213a"
 *   integrity sha512-vG6SvB6oYEhvgisZNFRmRCUkLz11c7rp+tbNTynGqc6mS1d5ATd/sGyV6W0KZZnXRKMTzZDRgQT3Ou9jhpAfUg==
 *   dependencies:
 *     "@babel/highlight" "^7.10.4"
 * 
 * "@babel/compat-data@^7.12.5", "@babel/compat-data@^7.12.7":
 *   version "7.12.7"
 *   resolved "https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.12.7.tgz#9329b4782a7d6bbd7eef57e11addf91ee3ef1e41"
 *   integrity sha512-YaxPMGs/XIWtYqrdEOZOCPsVWfEoriXopnsz3/i7apYPXQ3698UFhS6dVT1KN5qOsWmVgw/FOrmQgpRaZayGsw==
 * </pre>
 *
 * <p>
 * The URL,
 * <code>https://registry.yarnpkg.com/<strong>@babel</strong>/code-frame/-/<strong>code-frame<strong>-</strong>7.10.4</strong>.tgz#...</code>
 * is extracted as <code>npm/npmjs/@babel/code-frame/7.10.4</code>.
 * 
 * <p>
 * Theoretically, we can achieve the same result using a combination of
 * <code>grep</code> and <code>sed</code>, but who needs that kind of grief?
 */
public class YarnLockFileReader implements IDependencyListReader {

	private BufferedReader reader;

	public YarnLockFileReader(Reader input) {
		reader = new BufferedReader(input);
	}

	@Override
	public Collection<IContentId> getContentIds() {
		return reader.lines().map(line -> getResolved(line)).filter(id -> id != null).collect(Collectors.toList());
	}

	private IContentId getResolved(String line) {
		Pattern pattern = Pattern.compile(
				"resolved \"https:\\/\\/(?<host>[^\\/]*)(?:\\/(?<namespace>@[^\\/]*))?\\/(?:[^\\/]*)\\/-\\/(?<name>.*)-(?<version>[\\d\\.]*)\\.tgz");
		Matcher matcher = pattern.matcher(line);
		if (matcher.find()) {
			String namespace = matcher.group("namespace");
			if (namespace == null)
				namespace = "-";
			String name = matcher.group("name");
			String version = matcher.group("version");

			return ContentId.getContentId("npm", "npmjs", namespace, name, version);
		}

		return null;
	}
}
